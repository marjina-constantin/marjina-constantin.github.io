{"version":3,"sources":["Header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","collapse","isWideEnough","onClick","bind","this","setState","basename","process","color","dark","expand","fixed","href","isOpen","navbar","left","active","to","exact","path","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAsDeA,E,kDAjDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,EACVC,cAAc,GAElB,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBANA,E,2CASnB,WACIC,KAAKC,SAAS,CACVL,UAAWI,KAAKL,MAAMC,a,oBAI9B,WACI,OACI,8BACI,iCACI,eAAC,IAAD,CAAQM,SAAUC,GAAlB,UACI,eAAC,IAAD,CAAWC,MAAM,eAAeC,MAAI,EAACC,OAAO,KAAKC,MAAM,MAAvD,UACI,cAAC,IAAD,CAAgBC,KAAK,IAArB,SACI,8CAEFR,KAAKL,MAAME,cAAgB,cAAC,IAAD,CAAkBC,QAASE,KAAKF,UAC7D,cAAC,IAAD,CAAaW,OAAQT,KAAKL,MAAMC,SAAUc,QAAM,EAAhD,SACI,eAAC,IAAD,CAAcC,MAAI,EAAlB,UACI,cAAC,IAAD,CAAYC,QAAM,EAAlB,SACI,cAAC,IAAD,CAAYC,GAAG,IAAf,oBAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAYA,GAAG,QAAf,+BAMhB,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAlB,uC,GAvCPC,IAAMC,WCQZC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACI,cAAC,EAAD,OCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5c1d14ca.chunk.js","sourcesContent":["import React from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView } from 'mdbreact';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapse: false,\n            isWideEnough: false\n        };\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        this.setState({\n            collapse: !this.state.collapse\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <Router basename={process.env.PUBLIC_URL}>\n                        <MDBNavbar color=\"unique-color\" dark expand=\"md\" fixed=\"top\">\n                            <MDBNavbarBrand href=\"/\">\n                                <strong>Belot</strong>\n                            </MDBNavbarBrand>\n                            {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\n                            <MDBCollapse isOpen={this.state.collapse} navbar>\n                                <MDBNavbarNav left>\n                                    <MDBNavItem active>\n                                        <MDBNavLink to=\"/\">Home</MDBNavLink>\n                                    </MDBNavItem>\n                                    <MDBNavItem>\n                                        <MDBNavLink to=\"/user\">Profile</MDBNavLink>\n                                    </MDBNavItem>\n                                </MDBNavbarNav>\n                            </MDBCollapse>\n                        </MDBNavbar>\n\n                        <Switch>\n                            <Route exact path=\"/user\">\n                                test content\n                            </Route>\n                        </Switch>\n                    </Router>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import './App.css';\nimport Header from \"./Header\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport \"./assets/scss/mdb-free.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}