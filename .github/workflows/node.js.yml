# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: master
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
#      with:
#        node-version: ${{ matrix.node-version }}
#        cache: 'yarn'
#        cache-dependency-path: expenses/yarn.lock
#    - name: Cache dependencies
#      uses: actions/cache@v2
#      with:
#        path: |
#          **/node_modules
#        key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
    - name: Build
      run: cd expenses && CI=false && yarn && yarn build && cp build/index.html ../404.html
    - name: Deploy
      run: |
        LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
        git checkout -b prod
        git fetch origin
        git branch -u origin/prod
        git status
        date > date.txt
        git config --global user.name $user_name
        git config --global user.email $user_email
        git add .
        git commit -m "Push built application"
        git push -f origin prod
        sleep 50s
        node expenses/sendEmail.js "$LAST_COMMIT_MSG"
      env:
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
        repository: ${{ github.repository }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
