{"version":3,"sources":["pages/Charts/index.js","context/actions.js","context/reducer.js","context/context.js","utils/utils.js","components/Modal.js","utils/constants.js","components/TransactionForm.js","components/TransactionsTable.js","utils/useSortableData.js","components/Filters.js","pages/Home/index.js","config/routes.js","pages/Login/index.js","pages/Logout/index.js","pages/AddTransaction/index.js","components/Navbar.js","components/AppRoute.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Charts","ROOT_URL","loginUser","dispatch","loginPayload","a","requestOptions","method","headers","body","JSON","stringify","type","fetch","response","json","data","current_user","payload","localStorage","setItem","error","errors","removeItem","user","getItem","parse","initialState","userDetails","token","jwt_token","loading","errorMessage","userIsLoggedIn","initialData","groupedData","totals","filtered","AuthReducer","action","Error","DataReducer","raw","category","filter","item","field_category","monthsTotals","forEach","date","Date","field_date","month","toLocaleString","getFullYear","push","parseInt","field_amount","newState","AuthStateContext","React","createContext","AuthDispatchContext","DataContext","useAuthState","context","useContext","undefined","useData","useAuthDispatch","AuthProvider","children","useReducer","dataDispatch","Provider","value","handleErrors","ok","statusText","fetchRequest","url","options","callback","then","catch","console","log","fetchData","fetchOptions","Headers","Modal","show","onClose","ref","useRef","useEffect","checkIfClickedOutside","e","current","contains","target","document","addEventListener","removeEventListener","className","href","onClick","title","categories","label","TransactionForm","formType","values","onSuccess","toISOString","substr","field_description","useState","formState","setFormState","handleChange","event","name","onSubmit","preventDefault","node","nid","alert","required","placeholder","onChange","map","id","rows","TransactionsTable","total","items","handleEdit","setShowDeleteModal","config","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","b","direction","key","requestSort","useSortableData","cellSpacing","cellPadding","element","field_category_name","data-values","data-nid","currentTarget","getAttribute","Filters","Home","showDeleteModal","showEditModal","setShowEditModal","noData","focusedItem","setFocusedItem","handleDelete","deleteNode","Object","keys","routes","path","component","history","useHistory","handleLogin","googleResponse","access_token","accessToken","clientId","buttonText","render","renderProps","disabled","onFailure","cookiePolicy","isPrivate","logout","Navbar","cssClass","setCssClass","xDown","setXDown","yDown","setYDown","onTouchStart","touchStartEvent","firstTouch","touches","clientX","clientY","handleTouchStart","onTouchMove","touchMoveEvent","xUp","yUp","xDiff","yDiff","Math","abs","handleTouchMove","activeClassName","to","exact","AppRoute","Component","rest","props","Boolean","pathname","App","route","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","URL","process","origin","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.24cbcd72.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Charts = () => {\n  return (\n    <h2>Charts page</h2>\n  );\n};\n\nexport default Charts;\n","const ROOT_URL = 'https://dev-expenses-api.pantheonsite.io';\n\nexport async function loginUser(dispatch, loginPayload) {\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(loginPayload),\n  };\n\n  try {\n    dispatch({ type: 'REQUEST_LOGIN' });\n    let response = await fetch(`${ROOT_URL}/user/login/google?_format=json`, requestOptions);\n    let data = await response.json();\n\n    if (data.current_user) {\n      dispatch({ type: 'LOGIN_SUCCESS', payload: data });\n      localStorage.setItem('currentUser', JSON.stringify(data));\n      return data;\n    }\n\n    dispatch({ type: 'LOGIN_ERROR', error: data.errors[0] });\n  } catch (error) {\n    dispatch({ type: 'LOGIN_ERROR', error: error });\n  }\n}\n\nexport async function logout(dispatch) {\n  dispatch({ type: 'LOGOUT' });\n  localStorage.removeItem('currentUser');\n  localStorage.removeItem('token');\n}\n","let user = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\"))\n  : \"\";\nlet token = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).jwt_token\n  : \"\";\n\nexport const initialState = {\n  userDetails: \"\" || user,\n  token: \"\" || token,\n  loading: false,\n  errorMessage: null,\n  userIsLoggedIn: !!user\n};\n\nexport const initialData = {\n  groupedData: null,\n  totals: null,\n  filtered: null\n};\n\nexport const AuthReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_LOGIN\":\n      return {\n        ...initialState,\n        loading: true\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...initialState,\n        userDetails: action.payload,\n        token: action.payload.jwt_token,\n        loading: false,\n        userIsLoggedIn: true\n      };\n    case \"LOGOUT\":\n      return {\n        ...initialState,\n        user: \"\",\n        token: \"\",\n        userIsLoggedIn: false\n      };\n\n    case \"LOGIN_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\nexport const DataReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"SET_DATA\":\n      return {\n        ...initialState,\n        groupedData: action.groupedData,\n        totals: action.totals,\n        raw: action.raw\n      };\n\n    case \"FILTER_DATA\":\n      if (action.category !== '') {\n        const filtered = initialState.raw.filter(item => item.field_category === action.category);\n        let groupedData = {};\n        let monthsTotals = {};\n        filtered.forEach(item => {\n          const date = new Date(item.field_date);\n          const month = `${date.toLocaleString('default', { month: 'long' })} ${date.getFullYear()}`;\n          if (!groupedData[month]) {\n            groupedData[month] = [];\n          }\n          if (!monthsTotals[month]) {\n            monthsTotals[month] = 0;\n          }\n          groupedData[month].push(item);\n          monthsTotals[month] += parseInt(item.field_amount);\n        });\n        const newState = {\n          groupedData: groupedData,\n          totals: monthsTotals,\n        };\n        return {\n          ...initialState,\n          filtered: newState\n        };\n      }\n      return {\n        ...initialState,\n        filtered: null\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};","import React, {useReducer} from \"react\";\nimport {AuthReducer, initialState, DataReducer, initialData} from \"./reducer\";\n\nconst AuthStateContext = React.createContext();\nconst AuthDispatchContext = React.createContext();\nconst DataContext = React.createContext();\n\nexport function useAuthState() {\n  const context = React.useContext(AuthStateContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthState must be used within a AuthProvider\");\n  }\n\n  return context;\n}\n\nexport function useData() {\n  const context = React.useContext(DataContext);\n  if (context === undefined) {\n    throw new Error(\"useData must be used within a AuthProvider\");\n  }\n\n  return context;\n}\n\nexport function useAuthDispatch() {\n  const context = React.useContext(AuthDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthDispatch must be used within a AuthProvider\");\n  }\n\n  return context;\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, dispatch] = useReducer(AuthReducer, initialState);\n  const [data, dataDispatch] = useReducer(DataReducer, initialData);\n\n  return (\n    <AuthStateContext.Provider value={user}>\n      <AuthDispatchContext.Provider value={dispatch}>\n        <DataContext.Provider value={{data, dataDispatch}}>\n          {children}\n        </DataContext.Provider>\n      </AuthDispatchContext.Provider>\n    </AuthStateContext.Provider>\n  );\n};\n","// const handleErrors = (response) => {\n//   if (!response.ok) throw Error(response.statusText);\n//   return response.json();\n// }\nconst handleErrors = (response) => {\n  if (!response.ok) return (response.statusText);\n  return response.json();\n}\n\nexport const fetchRequest = (url, options, callback) => {\n  fetch(url, options)\n    .then(handleErrors)\n    .then(response => callback(response))\n    .catch(error => console.log(error));\n}\n\nexport const deleteNode = (nid, token, callback) => {\n  const fetchOptions = {\n    method: 'DELETE',\n    headers: new Headers({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'JWT-Authorization': 'Bearer ' + token\n    }),\n  };\n  fetch(`https://dev-expenses-api.pantheonsite.io/node/${nid}?_format=json`, fetchOptions)\n    .then(response => {\n      callback(response);\n    });\n}\n\nexport const fetchData = (token, dataDispatch) => {\n  const fetchOptions = {\n    method: 'GET',\n    headers: new Headers({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'JWT-Authorization': 'Bearer ' + token\n    }),\n  };\n  fetchRequest('https://dev-expenses-api.pantheonsite.io/user-expenses?_format=json', fetchOptions, (data) => {\n    let groupedData = {};\n    let monthsTotals = {};\n    data.forEach(item => {\n      const date = new Date(item.field_date);\n      const month = `${date.toLocaleString('default', { month: 'long' })} ${date.getFullYear()}`;\n      if (!groupedData[month]) {\n        groupedData[month] = [];\n      }\n      if (!monthsTotals[month]) {\n        monthsTotals[month] = 0;\n      }\n      groupedData[month].push(item);\n      monthsTotals[month] += parseInt(item.field_amount);\n    });\n    dataDispatch({ type: 'SET_DATA', raw: data, groupedData: groupedData, totals: monthsTotals });\n  });\n}\n","import React, {useEffect, useRef} from \"react\";\n\nexport default function Modal({show, onClose, children}) {\n  const ref = useRef();\n  useEffect(() => {\n    const checkIfClickedOutside = e => {\n      if (show && ref.current && !ref.current.contains(e.target)) {\n        onClose(e);\n      }\n    }\n    document.addEventListener(\"mousedown\", checkIfClickedOutside)\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n    };\n  }, [show])\n\n  return (\n    <>\n      {show ?\n        <div className=\"modal-window\" >\n          <div ref={ref}>\n            <a href=\"#\" onClick={onClose} title=\"Close\" className=\"modal-close\">Close</a>\n            {children}\n          </div>\n        </div>\n        : ''}\n    </>\n  )\n}\n","export const categories = [\n  {value: '', label: 'Category'},\n  {value: '1', label: 'Clothing'},\n  {value: '2', label: 'Entertainment'},\n  {value: '3', label: 'Food'},\n  {value: '4', label: 'Gifts'},\n  {value: '5', label: 'Household Items/Supplies'},\n  {value: '6', label: 'Housing'},\n  {value: '7', label: 'Medical/Healthcare'},\n  {value: '8', label: 'Personal'},\n  {value: '9', label: 'Transportation'},\n  {value: '10', label: 'Utilities'},\n];\n","import React, {useState} from \"react\";\nimport {fetchRequest} from '../utils/utils'\nimport {useAuthState} from \"../context\";\nimport {categories} from '../utils/constants'\n\nconst TransactionForm = ({formType, values, onSuccess}) => {\n  const initialState = {\n    field_amount: '',\n    field_date: new Date().toISOString().substr(0,10),\n    field_category: '',\n    field_description: '',\n  };\n  const [formState, setFormState] = useState(formType === 'add' ? initialState : values);\n  const { token } = useAuthState();\n  const handleChange = (event) => {\n    const value = event.target.value;\n    setFormState({\n      ...formState,\n      [event.target.name]: value\n    });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const node = {\n      type: 'transaction',\n      title: [formState.field_date],\n      field_amount: [formState.field_amount],\n      field_category: [formState.field_category],\n      field_date: [formState.field_date],\n      field_description: [formState.field_description],\n    }\n    const fetchOptions = {\n      method: formType === 'add' ? 'POST' : 'PATCH',\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'JWT-Authorization': 'Bearer ' + token\n      }),\n      body: JSON.stringify(node),\n    };\n    const url = formType === 'add' ?\n      'https://dev-expenses-api.pantheonsite.io/node?_format=json' :\n      `https://dev-expenses-api.pantheonsite.io/node/${values.nid}?_format=json`;\n    fetchRequest(url, fetchOptions, (data) => {\n      if (data.nid) {\n        onSuccess();\n        alert('Success!');\n        setFormState(initialState);\n      }\n      else {\n        alert('Something went wrong, please contact Constantin :)')\n      }\n    })\n  };\n\n  return (\n    <div>\n      <h2>{formType === 'add' ? 'Add transaction' : 'Edit transaction'}</h2>\n      <form className=\"add-transaction\" onSubmit={handleSubmit}>\n        <input required placeholder=\"Amount\" type=\"number\" name=\"field_amount\" value={formState.field_amount} onChange={handleChange} />\n        <input required placeholder=\"Date\" type=\"date\" name=\"field_date\" value={formState.field_date} onChange={handleChange} />\n        <select required name=\"field_category\" value={formState.field_category} onChange={handleChange}>\n          {categories.map((category, id) => (\n            <option key={id} value={category.value}>{category.label}</option>\n          ))}\n        </select>\n        <textarea placeholder=\"Description\" name=\"field_description\" rows=\"3\" value={formState.field_description} onChange={handleChange} />\n        <input type=\"submit\" value={formType === 'add' ? 'Add transaction' : 'Edit transaction'} />\n      </form>\n    </div>\n  );\n};\n\nexport default TransactionForm;\n","import React from \"react\";\nimport { useSortableData } from '../utils/useSortableData';\n\nexport default function TransactionsTable({month, total, items, handleEdit, setShowDeleteModal}) {\n\n  const { sortedItems, requestSort, sortConfig } = useSortableData(items);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return '';\n    }\n    return sortConfig.key === name ? sortConfig.direction : '';\n  };\n\n  return (\n    <div className=\"table-wrapper\">\n      <div className=\"month-badge\">{month}: {total}</div>\n      <table className=\"expenses-table\" cellSpacing=\"0\" cellPadding=\"0\">\n        <thead>\n        <tr>\n          <th>Date</th>\n          <th\n            onClick={() => requestSort('field_amount')}\n            className={ `sortable ${getClassNamesFor('field_amount')}` }\n          >\n            Amount\n          </th>\n          <th>Category</th>\n          <th>Description</th>\n          <th></th>\n          <th></th>\n        </tr>\n        </thead>\n        <tbody>\n        {sortedItems.map((element, id) => (\n          <tr key={element.nid}>\n            <td>{element.field_date}</td>\n            <td>{element.field_amount}</td>\n            <td>{element.field_category_name}</td>\n            <td>{element.field_description}</td>\n            <td>\n              <button\n                data-values={JSON.stringify({\n                  nid: element.nid,\n                  field_date: element.field_date,\n                  field_amount: element.field_amount,\n                  field_category: element.field_category,\n                  field_description: element.field_description,\n                })}\n                onClick={handleEdit}\n                className=\"btn-outline\">\n                Edit\n              </button>\n            </td>\n            <td>\n              <button\n                data-nid={element.nid}\n                onClick={(e) => setShowDeleteModal(e.currentTarget.getAttribute(\"data-nid\"))}\n                className=\"btn-outline\">\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React, {useMemo, useState} from \"react\";\n\nexport const useSortableData = (items, config = null) => {\n    const [sortConfig, setSortConfig] = useState(config);\n\n    const sortedItems = useMemo(() => {\n        let sortableItems = [...items];\n        if (sortConfig !== null) {\n            sortableItems.sort((a, b) => {\n                if (sortConfig.direction === 'ascending') {\n                    return a[sortConfig.key] - b[sortConfig.key];\n                }\n                else {\n                    return b[sortConfig.key] - a[sortConfig.key];\n                }\n            });\n        }\n        return sortableItems;\n    }, [items, sortConfig]);\n\n    const requestSort = (key) => {\n        let direction = 'ascending';\n        if (\n          sortConfig &&\n          sortConfig.key === key &&\n          sortConfig.direction === 'ascending'\n        ) {\n            direction = 'descending';\n        }\n        setSortConfig({ key, direction });\n    };\n\n    return { sortedItems: sortedItems, requestSort, sortConfig };\n};\n\n","import React from \"react\";\nimport {categories} from \"../utils/constants\";\nimport {useData} from \"../context\";\n\nexport default function Filters() {\n\n  const { dataDispatch } = useData();\n\n  const handleChange = (event) => {\n    const value = event.target.value;\n    dataDispatch({ type: 'FILTER_DATA', category: value });\n  };\n\n  return (\n    <div className=\"filters\">\n      <select name=\"category\" onChange={handleChange}>\n        {categories.map((category, id) => (\n          <option key={id} value={category.value}>{category.label}</option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import React, {useEffect, useState} from \"react\";\nimport {useAuthState, useData} from '../../context';\nimport {deleteNode, fetchData} from '../../utils/utils';\nimport Modal from '../../components/Modal';\nimport TransactionForm from \"../../components/TransactionForm\";\nimport TransactionsTable from \"../../components/TransactionsTable\";\nimport Filters from \"../../components/Filters\";\n\nconst Home = () => {\n  const { userDetails, token } = useAuthState();\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const { data, dataDispatch } = useData();\n  const noData = data.groupedData === null;\n\n  useEffect(() => {\n    if (noData) {\n      fetchData(token, dataDispatch);\n    }\n  }, [data]);\n\n  const [focusedItem, setFocusedItem] = useState({})\n\n  const handleEdit = (e) => {\n    const values = JSON.parse(e.currentTarget.getAttribute(\"data-values\"));\n    setFocusedItem(values);\n    setShowEditModal(true);\n  }\n\n  const handleDelete = (showDeleteModal, token) => {\n    deleteNode(showDeleteModal, token, (response) => {\n      if (response.ok) {\n        alert('Transaction was successfully deleted.');\n      }\n      else {\n        alert('Something went wrong.');\n      }\n      setShowDeleteModal(false);\n      fetchData(token, dataDispatch);\n    });\n  };\n\n  const items = data.filtered || data;\n\n  return (\n    <div>\n      <Modal show={showDeleteModal} onClose={(e) => {e.preventDefault(); setShowDeleteModal(false)}}>\n        <h3>Are you sure you want to delete the transaction?</h3>\n        <button onClick={() => handleDelete(showDeleteModal, token)} className=\"button logout\">Yes, remove the transaction</button>\n      </Modal>\n      <Modal show={showEditModal} onClose={(e) => {e.preventDefault(); setShowEditModal(false)}}>\n        <TransactionForm formType=\"edit\" values={focusedItem} onSuccess={() => {\n          setShowEditModal(false);\n          fetchData(token, dataDispatch);\n        }} />\n      </Modal>\n      <h2>Expenses</h2>\n      <h4>Hi, {userDetails?.current_user?.name}!</h4>\n      <Filters />\n      {noData ? '' :\n        <div>\n          {Object.keys(items.groupedData).map((item, id) => (\n            <TransactionsTable\n              key={id}\n              total={items.totals[item]}\n              month={item}\n              items={items.groupedData[item]}\n              handleEdit={handleEdit}\n              setShowDeleteModal={setShowDeleteModal}\n            />\n          ))}\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default Home;","import Charts from \"../pages/Charts\";\nimport Home from \"../pages/Home\";\nimport Login from '../pages/Login';\nimport Logout from '../pages/Logout';\nimport AddTransaction from '../pages/AddTransaction';\n\nconst routes = [\n  {\n    path:'/test/build',\n    component: Login,\n    isPrivate: false,\n  },\n  {\n    path:'/test/charts',\n    component: Charts,\n    isPrivate: true,\n  },\n  {\n    path:'/test/home',\n    component: Home,\n    isPrivate: true,\n  },\n  {\n    path:'/test/logout',\n    component: Logout,\n    isPrivate: true,\n  },\n  {\n    path:'/test/add-transaction',\n    component: AddTransaction,\n    isPrivate: true,\n  },\n]\n\nexport default routes","import React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport {loginUser, useAuthDispatch, useAuthState} from \"../../context\";\nimport { useHistory } from 'react-router-dom';\n\nconst Login = () => {\n  const dispatch = useAuthDispatch();\n  const history = useHistory();\n  const { loading, errorMessage, userIsLoggedIn } = useAuthState();\n\n  if (userIsLoggedIn) {\n    history.push('/test/home');\n  }\n\n  const handleLogin = async (googleResponse) => {\n    let payload = {access_token: googleResponse.accessToken};\n    try {\n      let response = await loginUser(dispatch, payload)\n      if (!response.current_user) {\n        return;\n      }\n\n      history.push(`/test/home`);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const failedResponseGoogle = (response) => {\n    console.log(response);\n  }\n\n  return (\n    <div>\n      <h4>Please login using Google in order to access app functionality.</h4>\n      { errorMessage ? <p>We have some errors: {errorMessage}</p> : null }\n      <GoogleLogin\n        clientId=\"954790461001-2p4vab8hud9u6mj4n6hb6iio4uaiofe5.apps.googleusercontent.com\"\n        buttonText=\"Login\"\n        render={renderProps => (\n          <button onClick={renderProps.onClick} className=\"button logout\" disabled={loading}>Log in</button>\n        )}\n        onSuccess={handleLogin}\n        onFailure={failedResponseGoogle}\n        cookiePolicy={'single_host_origin'}\n        disabled={loading}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport {logout, useAuthDispatch} from \"../../context\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Logout = () => {\n  const dispatch = useAuthDispatch();\n  const history = useHistory();\n  const handleLogout = (e) => {\n    e.preventDefault();\n    logout(dispatch);\n    history.push('/test/build') //navigate to logout page on logout\n  }\n\n  return (\n    <div>\n      <h3>Do you want to logout?</h3>\n      <button className=\"button logout\" onClick={handleLogout}>Logout</button>\n    </div>\n  );\n};\n\nexport default Logout;\n","import React from \"react\";\nimport TransactionForm from \"../../components/TransactionForm\";\nimport {fetchData} from '../../utils/utils';\nimport {useAuthState, useData} from \"../../context\";\n\nconst AddTransaction = () => {\n  const { token } = useAuthState();\n  const { dataDispatch } = useData();\n  return (\n    <TransactionForm formType=\"add\" onSuccess={() => {fetchData(token, dataDispatch);}}/>\n  );\n};\n\nexport default AddTransaction;\n","import {NavLink} from 'react-router-dom'\nimport {useAuthState} from '../context'\nimport { FaHome, FaChartPie, FaSignOutAlt, FaPlus } from \"react-icons/fa\";\nimport {useState} from \"react\";\n\nexport default function Navbar() {\n  const { userIsLoggedIn } = useAuthState();\n  const [cssClass, setCssClass] = useState('closed');\n  const [xDown, setXDown] = useState(null);\n  const [yDown, setYDown] = useState(null);\n  const handleTouchStart = (event) => {\n    const firstTouch = event.touches[0];\n    setXDown(firstTouch.clientX);\n    setYDown(firstTouch.clientY);\n  }\n\n  const handleTouchMove = (event) => {\n    if ( !xDown || !yDown ) {\n      return;\n    }\n    const xUp = event.touches[0].clientX;\n    const yUp = event.touches[0].clientY;\n    const xDiff = xDown - xUp;\n    const yDiff = yDown - yUp;\n    if ( Math.abs( xDiff ) < Math.abs( yDiff ) ) {\n      if ( yDiff > 0 ) {\n        setCssClass('open');\n      } else {\n        setCssClass('closed');\n      }\n    }\n    /* reset values */\n    setXDown(null);\n    setYDown(null);\n  }\n\n  return (\n    <div className={`navbar ${cssClass}`}\n      onTouchStart={touchStartEvent => handleTouchStart(touchStartEvent)}\n      onTouchMove={touchMoveEvent => handleTouchMove(touchMoveEvent)}\n     >\n      <ul>\n        <li>\n          <NavLink\n            // onClick={() => setCssClass('closed')}\n            activeClassName=\"selected\"\n            className=\"not-selected\"\n            to=\"/test/home\"\n            exact\n          ><FaHome /></NavLink>\n        </li>\n        <li>\n          <NavLink\n            // onClick={() => setCssClass('closed')}\n            to=\"/test/charts\"\n            activeClassName=\"selected\"\n            className=\"not-selected\"\n            exact\n          ><FaChartPie />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            // onClick={() => setCssClass('closed')}\n            to=\"/test/add-transaction\"\n            activeClassName=\"selected\"\n            className=\"not-selected\"\n            exact\n          ><FaPlus />\n          </NavLink>\n        </li>\n        {userIsLoggedIn ?\n          <li>\n            <NavLink\n              // onClick={() => setCssClass('closed')}\n              to=\"/test/logout\"\n              activeClassName=\"selected\"\n              className=\"not-selected\"\n              exact\n            ><FaSignOutAlt />\n            </NavLink>\n          </li> : ''\n        }\n      </ul>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { useAuthState } from '../context'\n\nconst AppRoute = ({ component: Component, path, isPrivate, ...rest }) => {\n\n  const userDetails = useAuthState()\n  return (\n    <Route\n      path={path}\n      render={props =>\n        isPrivate && !Boolean(userDetails.token) ? (\n          <Redirect\n            to={{ pathname: \"/test/build\" }}\n          />\n        ) : (\n          <Component {...props} />\n        )\n      }\n      {...rest}\n    />\n  )\n}\n\nexport default AppRoute","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\nimport routes from \"./config/routes\";\nimport Navbar from \"./components/Navbar\";\nimport { AuthProvider } from \"./context\";\nimport AppRoute from './components/AppRoute';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Navbar />\n\n        <Switch>\n          {routes.map((route) => (\n            <AppRoute\n              key={route.path}\n              exact path={route.path}\n              component={route.component}\n              isPrivate={route.isPrivate}\n            />\n          ))}\n        </Switch>\n\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register({onUpdate: (registration) => {\n  window.location.reload();\n        // caches.keys().then(function(cacheNames) {\n        //     cacheNames.forEach(function(cacheName) {\n        //         caches.delete(cacheName);\n        //     });\n        // });\n}\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}